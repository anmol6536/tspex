{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"tspex Overview tspex is a tissue-specificity calculator tool. It provides both an easy-to-use object-oriented Python API and a command-line interface (CLI) for calculating a variety of tissue-specificity metrics from gene expression data. tspex features include: Twelve different tissue-specificity metrics. Integration with popular data analysis libraries, such as NumPy, SciPy, and pandas. Visualization functions. Support for Jupyter notebooks. Source code tspex is an open source package distributed under the GPL-3.0 license. Its source code can be found in the GitHub repository . Installation There are two ways to install tspex: Using pip: $ pip install rnasamba Using conda: $ conda install -c bioconda rnasamba","title":"Home"},{"location":"#tspex","text":"","title":"tspex"},{"location":"#overview","text":"tspex is a tissue-specificity calculator tool. It provides both an easy-to-use object-oriented Python API and a command-line interface (CLI) for calculating a variety of tissue-specificity metrics from gene expression data. tspex features include: Twelve different tissue-specificity metrics. Integration with popular data analysis libraries, such as NumPy, SciPy, and pandas. Visualization functions. Support for Jupyter notebooks.","title":"Overview"},{"location":"#source-code","text":"tspex is an open source package distributed under the GPL-3.0 license. Its source code can be found in the GitHub repository .","title":"Source code"},{"location":"#installation","text":"There are two ways to install tspex: Using pip: $ pip install rnasamba Using conda: $ conda install -c bioconda rnasamba","title":"Installation"},{"location":"cli/","text":"Command-line interface (CLI) tspex can be executed from the command line using the tspex command. It takes an expression matrix file as input and outputs the computed tissue-specificity values. The input is an expression matrix with rows and columns corresponding to genes and tissues, respectivelly. The file must be in in the TSV or CSV formats. Usage usage : tspex [ - h ] [ - l ] [ - d ] [ - t THRESHOLD ] input_file output_file method Compute gene tissue - specificity from an expression matrix and save the output . positional arguments : input_file Expression matrix file in the TSV or CSV formats . output_file Output TSV file containing tissue - specificity values . method Tissue - specificity metric . Allowed values are : \" counts \" , \" tau \" , \" gini \" , \" simpson \" , \" shannon_specificity \" , \" roku_specificity \" , \" tsi \" , \" zscore \" , \" spm \" , \" spm_dpm \" , \" js_specificity \" , \" js_specificity_dpm \" . optional arguments : - h , -- help show this help message and exit - l , -- log Log - transform expression values . ( default : False ) - d , -- disable_transformation By default , tissue - specificity values are transformed so that they range from 0 ( perfectly ubiquitous ) to 1 ( perfectly tissue - specific ) . If this parameter is used , transformation will be disabled and each metric will have have a diferent range of possible values . ( default : False ) - t THRESHOLD , -- threshold THRESHOLD Threshold to be used with the \" counts \" metric . If another method is chosen , this parameter will be ignored . ( default : 0 ) Examples Using the spm metric to compute tissue-specificity values from a log-transformed expression matrix: tspex --log gene_expression.tsv tspex_spm.tsv spm Using the counts method to compute tissue-specificity by counting the number of tissues in which the gene expression is greater than 10: tspex --threshold 10 gene_expression.tsv tspex_counts.tsv counts Using the zscore without transformation to quantify tissue-specificity as the number of standard deviations away from the mean gene expression: tspex --disable_transformation gene_expression.tsv tspex_zscore.tsv zscore","title":"Command-line interface (CLI)"},{"location":"cli/#command-line-interface-cli","text":"tspex can be executed from the command line using the tspex command. It takes an expression matrix file as input and outputs the computed tissue-specificity values. The input is an expression matrix with rows and columns corresponding to genes and tissues, respectivelly. The file must be in in the TSV or CSV formats.","title":"Command-line interface (CLI)"},{"location":"cli/#usage","text":"usage : tspex [ - h ] [ - l ] [ - d ] [ - t THRESHOLD ] input_file output_file method Compute gene tissue - specificity from an expression matrix and save the output . positional arguments : input_file Expression matrix file in the TSV or CSV formats . output_file Output TSV file containing tissue - specificity values . method Tissue - specificity metric . Allowed values are : \" counts \" , \" tau \" , \" gini \" , \" simpson \" , \" shannon_specificity \" , \" roku_specificity \" , \" tsi \" , \" zscore \" , \" spm \" , \" spm_dpm \" , \" js_specificity \" , \" js_specificity_dpm \" . optional arguments : - h , -- help show this help message and exit - l , -- log Log - transform expression values . ( default : False ) - d , -- disable_transformation By default , tissue - specificity values are transformed so that they range from 0 ( perfectly ubiquitous ) to 1 ( perfectly tissue - specific ) . If this parameter is used , transformation will be disabled and each metric will have have a diferent range of possible values . ( default : False ) - t THRESHOLD , -- threshold THRESHOLD Threshold to be used with the \" counts \" metric . If another method is chosen , this parameter will be ignored . ( default : 0 )","title":"Usage"},{"location":"cli/#examples","text":"Using the spm metric to compute tissue-specificity values from a log-transformed expression matrix: tspex --log gene_expression.tsv tspex_spm.tsv spm Using the counts method to compute tissue-specificity by counting the number of tissues in which the gene expression is greater than 10: tspex --threshold 10 gene_expression.tsv tspex_counts.tsv counts Using the zscore without transformation to quantify tissue-specificity as the number of standard deviations away from the mean gene expression: tspex --disable_transformation gene_expression.tsv tspex_zscore.tsv zscore","title":"Examples"},{"location":"metrics/","text":"Tissue-specificity metrics tspex provides twelve distinct tissue-specificity metrics, which differ in their assumptions, scale and properties. Broadly, these metrics can be divided into two groups 1 : General scoring metrics: Summarize in a single value how tissue-specific or ubiquitous is a gene across all tissues. Individualized scoring metrics: Quantify how specific is the expression of each gene to each tissue. For the following equations x_i x_i represents the gene expression in tissue i i and n n is the number of tissues. Some metrics give results that are not in the [0,1] [0,1] interval, such as the Simpson index, that lies in the [\\frac{1}{n},1] [\\frac{1}{n},1] range. For these metrics, we provide transformed versions, denoted by the ' ' symbol, that range from 0 (perfectly ubiquitous) to 1 (perfectly tissue-specific). General scoring metrics The general scoring metrics included in tspex are: Counts 2 , Tau 3 , Gini coefficient 4 , Simpson index 5 , Shannon entropy specificity 6 , ROKU specificity 7 , Specificity measure dispersion (SPM DPM) 8 , and Jensen-Shannon specificity dispersion (JSS DPM). Counts \\begin{align} & t(x_i) = \\begin{cases} 1, & \\text{if } x_i > threshold \\\\ 0, & \\text{if } x_i \\le threshold \\end{cases} \\\\[9pt] & \\operatorname{Counts} = \\frac{n-\\sum_{i=1}^n(t(x_i))}{n-1} \\end{align} \\begin{align} & t(x_i) = \\begin{cases} 1, & \\text{if } x_i > threshold \\\\ 0, & \\text{if } x_i \\le threshold \\end{cases} \\\\[9pt] & \\operatorname{Counts} = \\frac{n-\\sum_{i=1}^n(t(x_i))}{n-1} \\end{align} Tau \\begin{align} & \\widehat{x_i} = \\frac{x_i}{\\max\\limits_{0\\le i \\le n}(x_i)} \\\\[9pt] & \\operatorname{Tau} = \\frac{\\sum_{i=1}^n(1-\\widehat{x_i})}{(n-1)} \\end{align} \\begin{align} & \\widehat{x_i} = \\frac{x_i}{\\max\\limits_{0\\le i \\le n}(x_i)} \\\\[9pt] & \\operatorname{Tau} = \\frac{\\sum_{i=1}^n(1-\\widehat{x_i})}{(n-1)} \\end{align} Gini coefficient \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\qquad \\;\\; x_1 \\le x_2 \\le \\ldots x_i \\le \\ldots \\le x_{n-1} \\le x_{n} \\notag\\\\[9pt] & \\operatorname{Gini} = \\frac{\\sum_{i=1}^n(2i-n-1)x_i}{n\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Gini'} = \\operatorname{Gini} \\frac{n}{n-1} \\end{align} \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\qquad \\;\\; x_1 \\le x_2 \\le \\ldots x_i \\le \\ldots \\le x_{n-1} \\le x_{n} \\notag\\\\[9pt] & \\operatorname{Gini} = \\frac{\\sum_{i=1}^n(2i-n-1)x_i}{n\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Gini'} = \\operatorname{Gini} \\frac{n}{n-1} \\end{align} Simpson index \\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Simpson} = \\sum_{i=1}^n(p_i^2) \\\\[9pt] & \\operatorname{Simpson'} = \\frac{\\operatorname{Simpson} - \\frac{1}{n}}{1 - \\frac{1}{n}} \\end{align} \\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Simpson} = \\sum_{i=1}^n(p_i^2) \\\\[9pt] & \\operatorname{Simpson'} = \\frac{\\operatorname{Simpson} - \\frac{1}{n}}{1 - \\frac{1}{n}} \\end{align} Shannon entropy specificity (HS) \\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{HS} = log_2(n) - H \\\\[9pt] & \\operatorname{HS'} = \\frac{\\operatorname{HS}}{log_2(n)} \\end{align} \\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{HS} = log_2(n) - H \\\\[9pt] & \\operatorname{HS'} = \\frac{\\operatorname{HS}}{log_2(n)} \\end{align} ROKU specificity \\begin{align} & M = \\operatorname{median}_{0\\le i \\le n}(x_i) \\\\[9pt] & S = \\operatorname{median}_{0\\le i \\le n}(|x_i - M|) \\\\[9pt] & u_i = \\frac{x_i - M}{5S + 10^{-4}} \\\\[9pt] & w(u_i) = \\begin{cases} (1-u^2)^2, & \\text{if } |u_i| \\le 1 \\\\ 0, & \\text{if } |u_i| > 1 \\end{cases} \\\\[9pt] & t = \\frac{\\sum_{i=1}^n(x_i w(u_i))}{\\sum_{i=1}^n(w(u_i))} \\\\[9pt] & X' = (|x_1-t|,|x_2-t|,\\ldots,|x_i-t|,\\ldots,|x_{n-1}-t|,|x_{n}-t|) \\\\[9pt] & p_i = \\frac{x_i'}{\\sum_{i=1}^n(x_i')} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{ROKU} = log_2(n) - H \\\\[9pt] & \\operatorname{ROKU'} = \\frac{\\operatorname{ROKU}}{log_2(n)} \\end{align} \\begin{align} & M = \\operatorname{median}_{0\\le i \\le n}(x_i) \\\\[9pt] & S = \\operatorname{median}_{0\\le i \\le n}(|x_i - M|) \\\\[9pt] & u_i = \\frac{x_i - M}{5S + 10^{-4}} \\\\[9pt] & w(u_i) = \\begin{cases} (1-u^2)^2, & \\text{if } |u_i| \\le 1 \\\\ 0, & \\text{if } |u_i| > 1 \\end{cases} \\\\[9pt] & t = \\frac{\\sum_{i=1}^n(x_i w(u_i))}{\\sum_{i=1}^n(w(u_i))} \\\\[9pt] & X' = (|x_1-t|,|x_2-t|,\\ldots,|x_i-t|,\\ldots,|x_{n-1}-t|,|x_{n}-t|) \\\\[9pt] & p_i = \\frac{x_i'}{\\sum_{i=1}^n(x_i')} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{ROKU} = log_2(n) - H \\\\[9pt] & \\operatorname{ROKU'} = \\frac{\\operatorname{ROKU}}{log_2(n)} \\end{align} Specificity measure dispersion (SPM DPM) \\begin{align} & \\operatorname{\\overline{SPM}} = \\frac{\\sum_{i=1}^n(\\operatorname{SPM_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{SPM_i} - \\operatorname{\\overline{SPM}})^2}{n-1}} \\\\[9pt] & \\operatorname{SPM\\ DPM} = \\sigma \\sqrt{n} \\end{align} \\begin{align} & \\operatorname{\\overline{SPM}} = \\frac{\\sum_{i=1}^n(\\operatorname{SPM_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{SPM_i} - \\operatorname{\\overline{SPM}})^2}{n-1}} \\\\[9pt] & \\operatorname{SPM\\ DPM} = \\sigma \\sqrt{n} \\end{align} Jensen-Shannon specificity dispersion (JSS DPM) \\begin{align} & \\operatorname{\\overline{JSS}} = \\frac{\\sum_{i=1}^n(\\operatorname{JSS_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{JSS_i} - \\operatorname{\\overline{JSS}})^2}{n-1}} \\\\[9pt] & \\operatorname{JSS\\ DPM} = \\sigma \\sqrt{n} \\end{align} \\begin{align} & \\operatorname{\\overline{JSS}} = \\frac{\\sum_{i=1}^n(\\operatorname{JSS_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{JSS_i} - \\operatorname{\\overline{JSS}})^2}{n-1}} \\\\[9pt] & \\operatorname{JSS\\ DPM} = \\sigma \\sqrt{n} \\end{align} Individualized scoring metrics The general scoring metrics included in tspex are: Tissue-specificity index (TSI) 9 , Z-score 10 , Specificity measure (SPM) 11 , and Jensen-Shannon specificity (JSS) 12 . Tissue-specificity index (TSI) \\begin{align} & \\operatorname{TSI_i} = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\end{align} \\begin{align} & \\operatorname{TSI_i} = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\end{align} Z-score \\begin{align} & \\overline{x} = \\frac{\\sum_{i=1}^n(x_i)}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(x_i - \\overline{x})^2}{n-1}} \\\\[9pt] & \\operatorname{Z-Score_i} = \\frac{x_i - \\overline{x}}{\\sigma} \\\\[9pt] & \\operatorname{Z-Score_i'} = \\frac{\\operatorname{Z-Score_i} + \\frac{(n-1)}{\\sqrt{n}}}{2 \\frac{(n-1)}{\\sqrt{n}}} \\end{align} \\begin{align} & \\overline{x} = \\frac{\\sum_{i=1}^n(x_i)}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(x_i - \\overline{x})^2}{n-1}} \\\\[9pt] & \\operatorname{Z-Score_i} = \\frac{x_i - \\overline{x}}{\\sigma} \\\\[9pt] & \\operatorname{Z-Score_i'} = \\frac{\\operatorname{Z-Score_i} + \\frac{(n-1)}{\\sqrt{n}}}{2 \\frac{(n-1)}{\\sqrt{n}}} \\end{align} Specificity measure (SPM) \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\operatorname{SPM_i} = \\frac{x_i^2}{x_i*||X||_2} \\end{align} \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\operatorname{SPM_i} = \\frac{x_i^2}{x_i*||X||_2} \\end{align} Jensen-Shannon specificity (JSS) \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & X' = (0,0,\\ldots,x_i,\\ldots,0,0) \\\\[9pt] & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & q_i = \\frac{x'_i}{\\sum_{i=1}^n(x'_i)} \\\\[9pt] & \\operatorname{JSS_i} = 1 - \\sqrt{\\frac{\\sum_{i=1}^n(p_i \\log_2(p_i))}{2} - \\sum_{i=1}^n\\left(\\frac{p_i+q_i}{2} \\log_2\\left(\\frac{p_i+q_i}{2}\\right)\\right)} \\end{align} \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & X' = (0,0,\\ldots,x_i,\\ldots,0,0) \\\\[9pt] & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & q_i = \\frac{x'_i}{\\sum_{i=1}^n(x'_i)} \\\\[9pt] & \\operatorname{JSS_i} = 1 - \\sqrt{\\frac{\\sum_{i=1}^n(p_i \\log_2(p_i))}{2} - \\sum_{i=1}^n\\left(\\frac{p_i+q_i}{2} \\log_2\\left(\\frac{p_i+q_i}{2}\\right)\\right)} \\end{align} References Kryuchkova-Mostacci, Nadezda, and Marc Robinson-Rechavi. \"A benchmark of gene expression tissue-specificity metrics.\" Briefings in bioinformatics 18.2 (2017): 205-214. \u21a9 Duret, Laurent, and Dominique Mouchiroud. \"Determinants of substitution rates in mammalian genes: expression pattern affects selection intensity but not mutation rate.\" Molecular biology and evolution 17.1 (2000): 68-070. \u21a9 Yanai, Itai, et al. \"Genome-wide midrange transcription profiles reveal expression level relationships in human tissue specification.\" Bioinformatics 21.5 (2004): 650-659. \u21a9 Ceriani, Lidia, and Paolo Verme. \"The origins of the Gini index: extracts from Variabilit\u00e0 e Mutabilit\u00e0 (1912) by Corrado Gini.\" The Journal of Economic Inequality 10.3 (2012): 421-443. \u21a9 Simpson, Edward H. \"Measurement of diversity.\" Nature 163.4148 (1949): 688. \u21a9 Schug, Jonathan, et al. \"Promoter features related to tissue specificity as measured by Shannon entropy.\" Genome biology 6.4 (2005): R33. \u21a9 Kadota, Koji, et al. \"ROKU: a novel method for identification of tissue-specific genes.\" BMC bioinformatics 7.1 (2006): 294. \u21a9 Pan, Jian-Bo, et al. \"PaGeFinder: quantitative identification of spatiotemporal pattern genes.\" Bioinformatics 28.11 (2012): 1544-1545. \u21a9 Julien, Philippe, et al. \"Mechanisms and evolutionary patterns of mammalian and avian dosage compensation.\" PLoS biology 10.5 (2012): e1001328. \u21a9 Vandenbon, Alexis, and Kenta Nakai. \"Modeling tissue-specific structural patterns in human and mouse promoters.\" Nucleic acids research 38.1 (2009): 17-25. \u21a9 Xiao, Sheng-Jian, et al. \"TiSGeD: a database for tissue-specific genes.\" Bioinformatics 26.9 (2010): 1273-1275. \u21a9 Cabili, Moran N., et al. \"Integrative annotation of human large intergenic noncoding RNAs reveals global properties and specific subclasses.\" Genes & development 25.18 (2011): 1915-1927. \u21a9","title":"Tissue-specificity metrics"},{"location":"metrics/#tissue-specificity-metrics","text":"tspex provides twelve distinct tissue-specificity metrics, which differ in their assumptions, scale and properties. Broadly, these metrics can be divided into two groups 1 : General scoring metrics: Summarize in a single value how tissue-specific or ubiquitous is a gene across all tissues. Individualized scoring metrics: Quantify how specific is the expression of each gene to each tissue. For the following equations x_i x_i represents the gene expression in tissue i i and n n is the number of tissues. Some metrics give results that are not in the [0,1] [0,1] interval, such as the Simpson index, that lies in the [\\frac{1}{n},1] [\\frac{1}{n},1] range. For these metrics, we provide transformed versions, denoted by the ' ' symbol, that range from 0 (perfectly ubiquitous) to 1 (perfectly tissue-specific).","title":"Tissue-specificity metrics"},{"location":"metrics/#general-scoring-metrics","text":"The general scoring metrics included in tspex are: Counts 2 , Tau 3 , Gini coefficient 4 , Simpson index 5 , Shannon entropy specificity 6 , ROKU specificity 7 , Specificity measure dispersion (SPM DPM) 8 , and Jensen-Shannon specificity dispersion (JSS DPM).","title":"General scoring metrics"},{"location":"metrics/#counts","text":"\\begin{align} & t(x_i) = \\begin{cases} 1, & \\text{if } x_i > threshold \\\\ 0, & \\text{if } x_i \\le threshold \\end{cases} \\\\[9pt] & \\operatorname{Counts} = \\frac{n-\\sum_{i=1}^n(t(x_i))}{n-1} \\end{align} \\begin{align} & t(x_i) = \\begin{cases} 1, & \\text{if } x_i > threshold \\\\ 0, & \\text{if } x_i \\le threshold \\end{cases} \\\\[9pt] & \\operatorname{Counts} = \\frac{n-\\sum_{i=1}^n(t(x_i))}{n-1} \\end{align}","title":"Counts"},{"location":"metrics/#tau","text":"\\begin{align} & \\widehat{x_i} = \\frac{x_i}{\\max\\limits_{0\\le i \\le n}(x_i)} \\\\[9pt] & \\operatorname{Tau} = \\frac{\\sum_{i=1}^n(1-\\widehat{x_i})}{(n-1)} \\end{align} \\begin{align} & \\widehat{x_i} = \\frac{x_i}{\\max\\limits_{0\\le i \\le n}(x_i)} \\\\[9pt] & \\operatorname{Tau} = \\frac{\\sum_{i=1}^n(1-\\widehat{x_i})}{(n-1)} \\end{align}","title":"Tau"},{"location":"metrics/#gini-coefficient","text":"\\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\qquad \\;\\; x_1 \\le x_2 \\le \\ldots x_i \\le \\ldots \\le x_{n-1} \\le x_{n} \\notag\\\\[9pt] & \\operatorname{Gini} = \\frac{\\sum_{i=1}^n(2i-n-1)x_i}{n\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Gini'} = \\operatorname{Gini} \\frac{n}{n-1} \\end{align} \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\qquad \\;\\; x_1 \\le x_2 \\le \\ldots x_i \\le \\ldots \\le x_{n-1} \\le x_{n} \\notag\\\\[9pt] & \\operatorname{Gini} = \\frac{\\sum_{i=1}^n(2i-n-1)x_i}{n\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Gini'} = \\operatorname{Gini} \\frac{n}{n-1} \\end{align}","title":"Gini coefficient"},{"location":"metrics/#simpson-index","text":"\\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Simpson} = \\sum_{i=1}^n(p_i^2) \\\\[9pt] & \\operatorname{Simpson'} = \\frac{\\operatorname{Simpson} - \\frac{1}{n}}{1 - \\frac{1}{n}} \\end{align} \\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & \\operatorname{Simpson} = \\sum_{i=1}^n(p_i^2) \\\\[9pt] & \\operatorname{Simpson'} = \\frac{\\operatorname{Simpson} - \\frac{1}{n}}{1 - \\frac{1}{n}} \\end{align}","title":"Simpson index"},{"location":"metrics/#shannon-entropy-specificity-hs","text":"\\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{HS} = log_2(n) - H \\\\[9pt] & \\operatorname{HS'} = \\frac{\\operatorname{HS}}{log_2(n)} \\end{align} \\begin{align} & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{HS} = log_2(n) - H \\\\[9pt] & \\operatorname{HS'} = \\frac{\\operatorname{HS}}{log_2(n)} \\end{align}","title":"Shannon entropy specificity (HS)"},{"location":"metrics/#roku-specificity","text":"\\begin{align} & M = \\operatorname{median}_{0\\le i \\le n}(x_i) \\\\[9pt] & S = \\operatorname{median}_{0\\le i \\le n}(|x_i - M|) \\\\[9pt] & u_i = \\frac{x_i - M}{5S + 10^{-4}} \\\\[9pt] & w(u_i) = \\begin{cases} (1-u^2)^2, & \\text{if } |u_i| \\le 1 \\\\ 0, & \\text{if } |u_i| > 1 \\end{cases} \\\\[9pt] & t = \\frac{\\sum_{i=1}^n(x_i w(u_i))}{\\sum_{i=1}^n(w(u_i))} \\\\[9pt] & X' = (|x_1-t|,|x_2-t|,\\ldots,|x_i-t|,\\ldots,|x_{n-1}-t|,|x_{n}-t|) \\\\[9pt] & p_i = \\frac{x_i'}{\\sum_{i=1}^n(x_i')} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{ROKU} = log_2(n) - H \\\\[9pt] & \\operatorname{ROKU'} = \\frac{\\operatorname{ROKU}}{log_2(n)} \\end{align} \\begin{align} & M = \\operatorname{median}_{0\\le i \\le n}(x_i) \\\\[9pt] & S = \\operatorname{median}_{0\\le i \\le n}(|x_i - M|) \\\\[9pt] & u_i = \\frac{x_i - M}{5S + 10^{-4}} \\\\[9pt] & w(u_i) = \\begin{cases} (1-u^2)^2, & \\text{if } |u_i| \\le 1 \\\\ 0, & \\text{if } |u_i| > 1 \\end{cases} \\\\[9pt] & t = \\frac{\\sum_{i=1}^n(x_i w(u_i))}{\\sum_{i=1}^n(w(u_i))} \\\\[9pt] & X' = (|x_1-t|,|x_2-t|,\\ldots,|x_i-t|,\\ldots,|x_{n-1}-t|,|x_{n}-t|) \\\\[9pt] & p_i = \\frac{x_i'}{\\sum_{i=1}^n(x_i')} \\\\[9pt] & H = -\\sum_{i=1}^n(p_i \\log_2(p_i)) \\\\[9pt] & \\operatorname{ROKU} = log_2(n) - H \\\\[9pt] & \\operatorname{ROKU'} = \\frac{\\operatorname{ROKU}}{log_2(n)} \\end{align}","title":"ROKU specificity"},{"location":"metrics/#specificity-measure-dispersion-spm-dpm","text":"\\begin{align} & \\operatorname{\\overline{SPM}} = \\frac{\\sum_{i=1}^n(\\operatorname{SPM_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{SPM_i} - \\operatorname{\\overline{SPM}})^2}{n-1}} \\\\[9pt] & \\operatorname{SPM\\ DPM} = \\sigma \\sqrt{n} \\end{align} \\begin{align} & \\operatorname{\\overline{SPM}} = \\frac{\\sum_{i=1}^n(\\operatorname{SPM_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{SPM_i} - \\operatorname{\\overline{SPM}})^2}{n-1}} \\\\[9pt] & \\operatorname{SPM\\ DPM} = \\sigma \\sqrt{n} \\end{align}","title":"Specificity measure dispersion (SPM DPM)"},{"location":"metrics/#jensen-shannon-specificity-dispersion-jss-dpm","text":"\\begin{align} & \\operatorname{\\overline{JSS}} = \\frac{\\sum_{i=1}^n(\\operatorname{JSS_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{JSS_i} - \\operatorname{\\overline{JSS}})^2}{n-1}} \\\\[9pt] & \\operatorname{JSS\\ DPM} = \\sigma \\sqrt{n} \\end{align} \\begin{align} & \\operatorname{\\overline{JSS}} = \\frac{\\sum_{i=1}^n(\\operatorname{JSS_i})}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(\\operatorname{JSS_i} - \\operatorname{\\overline{JSS}})^2}{n-1}} \\\\[9pt] & \\operatorname{JSS\\ DPM} = \\sigma \\sqrt{n} \\end{align}","title":"Jensen-Shannon specificity dispersion (JSS DPM)"},{"location":"metrics/#individualized-scoring-metrics","text":"The general scoring metrics included in tspex are: Tissue-specificity index (TSI) 9 , Z-score 10 , Specificity measure (SPM) 11 , and Jensen-Shannon specificity (JSS) 12 .","title":"Individualized scoring metrics"},{"location":"metrics/#tissue-specificity-index-tsi","text":"\\begin{align} & \\operatorname{TSI_i} = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\end{align} \\begin{align} & \\operatorname{TSI_i} = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\end{align}","title":"Tissue-specificity index (TSI)"},{"location":"metrics/#z-score","text":"\\begin{align} & \\overline{x} = \\frac{\\sum_{i=1}^n(x_i)}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(x_i - \\overline{x})^2}{n-1}} \\\\[9pt] & \\operatorname{Z-Score_i} = \\frac{x_i - \\overline{x}}{\\sigma} \\\\[9pt] & \\operatorname{Z-Score_i'} = \\frac{\\operatorname{Z-Score_i} + \\frac{(n-1)}{\\sqrt{n}}}{2 \\frac{(n-1)}{\\sqrt{n}}} \\end{align} \\begin{align} & \\overline{x} = \\frac{\\sum_{i=1}^n(x_i)}{n} \\\\[9pt] & \\sigma = \\sqrt{\\frac{\\sum_{i=1}^n(x_i - \\overline{x})^2}{n-1}} \\\\[9pt] & \\operatorname{Z-Score_i} = \\frac{x_i - \\overline{x}}{\\sigma} \\\\[9pt] & \\operatorname{Z-Score_i'} = \\frac{\\operatorname{Z-Score_i} + \\frac{(n-1)}{\\sqrt{n}}}{2 \\frac{(n-1)}{\\sqrt{n}}} \\end{align}","title":"Z-score"},{"location":"metrics/#specificity-measure-spm","text":"\\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\operatorname{SPM_i} = \\frac{x_i^2}{x_i*||X||_2} \\end{align} \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & \\operatorname{SPM_i} = \\frac{x_i^2}{x_i*||X||_2} \\end{align}","title":"Specificity measure (SPM)"},{"location":"metrics/#jensen-shannon-specificity-jss","text":"\\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & X' = (0,0,\\ldots,x_i,\\ldots,0,0) \\\\[9pt] & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & q_i = \\frac{x'_i}{\\sum_{i=1}^n(x'_i)} \\\\[9pt] & \\operatorname{JSS_i} = 1 - \\sqrt{\\frac{\\sum_{i=1}^n(p_i \\log_2(p_i))}{2} - \\sum_{i=1}^n\\left(\\frac{p_i+q_i}{2} \\log_2\\left(\\frac{p_i+q_i}{2}\\right)\\right)} \\end{align} \\begin{align} & X = (x_1,x_2,\\ldots,x_i,\\ldots,x_{n-1},x_{n}) \\\\[9pt] & X' = (0,0,\\ldots,x_i,\\ldots,0,0) \\\\[9pt] & p_i = \\frac{x_i}{\\sum_{i=1}^n(x_i)} \\\\[9pt] & q_i = \\frac{x'_i}{\\sum_{i=1}^n(x'_i)} \\\\[9pt] & \\operatorname{JSS_i} = 1 - \\sqrt{\\frac{\\sum_{i=1}^n(p_i \\log_2(p_i))}{2} - \\sum_{i=1}^n\\left(\\frac{p_i+q_i}{2} \\log_2\\left(\\frac{p_i+q_i}{2}\\right)\\right)} \\end{align}","title":"Jensen-Shannon specificity (JSS)"},{"location":"metrics/#references","text":"Kryuchkova-Mostacci, Nadezda, and Marc Robinson-Rechavi. \"A benchmark of gene expression tissue-specificity metrics.\" Briefings in bioinformatics 18.2 (2017): 205-214. \u21a9 Duret, Laurent, and Dominique Mouchiroud. \"Determinants of substitution rates in mammalian genes: expression pattern affects selection intensity but not mutation rate.\" Molecular biology and evolution 17.1 (2000): 68-070. \u21a9 Yanai, Itai, et al. \"Genome-wide midrange transcription profiles reveal expression level relationships in human tissue specification.\" Bioinformatics 21.5 (2004): 650-659. \u21a9 Ceriani, Lidia, and Paolo Verme. \"The origins of the Gini index: extracts from Variabilit\u00e0 e Mutabilit\u00e0 (1912) by Corrado Gini.\" The Journal of Economic Inequality 10.3 (2012): 421-443. \u21a9 Simpson, Edward H. \"Measurement of diversity.\" Nature 163.4148 (1949): 688. \u21a9 Schug, Jonathan, et al. \"Promoter features related to tissue specificity as measured by Shannon entropy.\" Genome biology 6.4 (2005): R33. \u21a9 Kadota, Koji, et al. \"ROKU: a novel method for identification of tissue-specific genes.\" BMC bioinformatics 7.1 (2006): 294. \u21a9 Pan, Jian-Bo, et al. \"PaGeFinder: quantitative identification of spatiotemporal pattern genes.\" Bioinformatics 28.11 (2012): 1544-1545. \u21a9 Julien, Philippe, et al. \"Mechanisms and evolutionary patterns of mammalian and avian dosage compensation.\" PLoS biology 10.5 (2012): e1001328. \u21a9 Vandenbon, Alexis, and Kenta Nakai. \"Modeling tissue-specific structural patterns in human and mouse promoters.\" Nucleic acids research 38.1 (2009): 17-25. \u21a9 Xiao, Sheng-Jian, et al. \"TiSGeD: a database for tissue-specific genes.\" Bioinformatics 26.9 (2010): 1273-1275. \u21a9 Cabili, Moran N., et al. \"Integrative annotation of human large intergenic noncoding RNAs reveals global properties and specific subclasses.\" Genes & development 25.18 (2011): 1915-1927. \u21a9","title":"References"},{"location":"python_api/","text":"Python API In this tutorial we will detail the usage of the Python API with real-world data, showing how to integrate tspex with popular packages such as pandas and seaborn . Introduction In this tutorial we are going to use data from the Genotype-Tissue Expression (GTEx) project , which provides a large catalogue of gene expression across 54 human tissues. In order to speed up the calculations and make the figures clearer, we are going to use only five tissues: Bladder, Liver, Lung, Pancreas and Stomach. import tspex import pandas as pd import seaborn as sns gtex_link = 'https://storage.googleapis.com/gtex_analysis_v7/rna_seq_data/GTEx_Analysis_2016-01-15_v7_RNASeQCv1.1.8_gene_median_tpm.gct.gz' expression_data = pd . read_csv ( gtex_link , sep = ' \\t ' , index_col = 'gene_id' , skiprows = 2 ) expression_data = expression_data . loc [:, [ 'Bladder' , 'Liver' , 'Lung' , 'Pancreas' , 'Stomach' ]] We'll remove genes that are not expressed in any of the five tissues. expression_data = expression_data . loc [( expression_data > 0 ) . any ( axis = 1 )] expression_data . shape ( 31872 , 5 ) expression_data . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000223972.4 0.05878 0.06259 0.06655 0.027255 0.063895 ENSG00000227232.4 14.24000 5.40600 13.68000 5.553000 9.342500 ENSG00000243485.2 0.06097 0.08316 0.06216 0.034055 0.078575 ENSG00000237613.2 0.04113 0.03354 0.03790 0.022915 0.043800 ENSG00000268020.2 0.00000 0.02959 0.00000 0.000000 0.000000 The TissueSpecificity class The usage of the tspex module is centered on the creation and analysis of TissueSpecificity objects. In order to create these objects, two parameters are required: (1) a pandas DataFrame containing gene expression data and (2) a tissue-specificity metric. print ( tspex . TissueSpecificity . __doc__ ) Create an object of the TissueSpecificity class . Parameters ---------- expression_data : pandas . core . frame . DataFrame Pandas DataFrame containing the expression matrix , with rows corresponding to genes and columns to tissues / conditions . method : str A string representing which tissue - expression metric should be calculated . One of : ' counts ' , ' tau ' , ' gini ' , ' simpson ' , ' shannon_specificity ' , ' roku_specificity ' , ' tsi ' , ' zscore ' , ' spm ' , ' spm_dpm ' , ' js_specificity ' , ' js_specificity_dpm ' . log : bool , default False Log - transform the expression matrix before computing tissue - specificity by taking the base - 2 logarithm of one plus the expression values . By default , no transformation is performed . transform : bool , default True Transform the tissue - specificity values so that they range from 0 ( perfectly ubiquitous ) to 1 ( perfectly tissue - specific ) . By default , the value is transformed . The following metrics are affected by changes in this parameter : ' gini ' , ' simpson ' , ' shannon_specificity ' , ' roku_specificity ' , ' zscore ' . threshold : int or float , default 0 Value above which the gene is considered to be expressed . By default , any positive expression value is considered . Only the ' counts ' metric is affected by changes in this parameter . Attributes ---------- expression_data : pandas . DataFrame Expression matrix used to compute the tissue - specificity values . If the log parameter was set to True , the values will be log - transformed . tissue_specificity : pandas . Series or pandas . DataFrame Tissue - specificity values computed from the input expression matrix . The nonobligatory parameters ( log , transform and threshold ) and the object attributes ( expression_data and tissue_specificity ) will be explained throughout the tutorial. Tissue-specificity metrics tspex provides twelve different tissue-specificity metrics that can be divided into two groups: - General scoring metrics: Describe in a single value how tissue-specific or ubiquitous is a gene across all tissues ( counts , tau , gini , simpson , shannon_specificity , roku_specificity , spm_dpm and js_specificity_dpm ). - Individualized scoring metrics: Quantify how specific is the expression of each gene to each tissue ( tsi , zscore , spm and js_specificity ). Example 1: General scoring metric In this example we are going to quantify the tissue-specificity of each gene using the Tau metric, which is a general scoring metric. Therefore, we will get a single tissue-specificity score per gene. When creating a TissueSpecificity object, you can choose to log-transform the expression values before quantifying tissue-specificity. tso = tspex . TissueSpecificity ( expression_data , 'tau' , log = True ) The log-transformed expression matrix is stored in the expression_data attribute, which is a regular pandas DataFrame. tso . expression_data . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000223972.4 0.057117 0.060709 0.064429 0.026890 0.061937 ENSG00000227232.4 2.723924 1.857235 2.686486 1.879923 2.336262 ENSG00000243485.2 0.059184 0.079883 0.060305 0.033488 0.075641 ENSG00000237613.2 0.040307 0.032990 0.037199 0.022656 0.042868 ENSG00000268020.2 0.000000 0.029161 0.000000 0.000000 0.000000 The computed tissue-specificity values are stored in the tissue_specificity attribute that, in this case, is an one-dimensional pandas Series. tso . tissue_specificity . head () gene_id ENSG00000223972 . 4 0 . 1981 ENSG00000227232 . 4 0 . 1960 ENSG00000243485 . 2 0 . 2845 ENSG00000237613 . 2 0 . 2235 ENSG00000268020 . 2 1 . 0000 dtype : float64 Any of the Series' methods can be used to inspect tissue_specificity . tso . tissue_specificity . quantile ([ 0.5 , 0.75 , 0.95 ]) 0 . 50 0 . 502950 0 . 75 0 . 761925 0 . 95 1 . 000000 dtype : float64 Two visualization methods are available in tspex: plot_histogram and plot_heatmap . plot_histogram can be used to verify the distribution of the tissue-specificity values. tso . plot_histogram () Whereas plot_heatmap may be used to visualize the amount of genes that are specific for each tissue. tso . plot_heatmap ( threshold = 0.8 , sort_genes = True , use_zscore = True , gene_names = False ) Example 2: Individualized scoring metric In some cases we may be interested in discovering genes that are specifically expressed in one or more tissues of interest. In this situation, general scoring metrics are not be the best choice, as they would only tell us how tissue-specific is each gene, regardless of the tissue. Accordingly, in this example we are going to quantify the tissue-specificity of each gene using the SPM metric, an individualized scoring metric. tso = tspex . TissueSpecificity ( expression_data , 'spm' , log = True ) As the SPM metric computes how specific each gene is in each tissue, the tissue_specificity attribute is a two-dimensional pandas DataFrame. tso . tissue_specificity . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000223972.4 0.4565 0.4852 0.5149 0.2149 0.4950 ENSG00000227232.4 0.5235 0.3569 0.5163 0.3613 0.4490 ENSG00000243485.2 0.4147 0.5598 0.4226 0.2347 0.5301 ENSG00000237613.2 0.5020 0.4108 0.4633 0.2822 0.5339 ENSG00000268020.2 0.0000 1.0000 0.0000 0.0000 0.0000 To inspect the distribution of the tissue-specificity values separately for each tissue, we can use the violinplot function from the seaborn package. sns . violinplot ( x = \"variable\" , y = \"value\" , inner = None , scale = \"count\" , color = 'C0' , data = tso . tissue_specificity . melt ()); The query method can be used to select genes that satisfy certain criteria. In this case, we are selecting genes that are preferentially expressed in the bladder and lung. selected_genes_specificity = tso . tissue_specificity . query ( 'Bladder >= 0.6 & Lung >= 0.6' ) selected_genes_specificity . shape ( 1282 , 5 ) selected_genes_expression = tso . expression_data . reindex ( selected_genes_specificity . index ) selected_genes_specificity . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000228526.2 0.6410 0.1192 0.6566 0.2270 0.3038 ENSG00000233623.2 0.6775 0.1907 0.6832 0.1948 0.0000 ENSG00000171819.4 0.7653 0.0433 0.6072 0.0858 0.1908 ENSG00000202461.1 0.6564 0.0000 0.6383 0.2459 0.3181 ENSG00000162493.12 0.6019 0.0214 0.6080 0.2072 0.4740 sns . clustermap ( selected_genes_expression , figsize = ( 6 , 6 ), z_score = 0 ); Example 3: The transform parameter When a TissueSpecificity object is created, the computed tissue-specificity values are transformed so that they fall within 0 (perfectly ubiquitous expression) and 1 (perfectly tissue-specific expression). If the user wants to obtain the untransformed values given by the chosen tissue-specificity metric, he can set the transform argument to False . The following metrics are affected by changes in this parameter: gini , simpson , shannon_specificity , roku_specificity and zscore . For instance, untransformed values obtained with the roku_specificity method fall within 0 and log2(number of tissues). tso = tspex . TissueSpecificity ( expression_data , 'roku_specificity' , log = True ) tso . tissue_specificity . max () 1 . 0 tso . plot_histogram () tso = tspex . TissueSpecificity ( expression_data , 'roku_specificity' , log = True , transform = False ) tso . tissue_specificity . max () 2 . 3219 tso . plot_histogram () Example 4: The threshold parameter of the counts metric The counts metric quantifies tissue-specificity as the proportion of tissues above a given expression threshold. Consequently, the threshold parameter directly influences the results obtained when using this method. In this example we will first set threshold to 5. Therefore, genes will be considered expressed in any given tissue if their expression is above this value. tso = tspex . TissueSpecificity ( expression_data , 'counts' , threshold = 5 ) sum ( tso . tissue_specificity >= 0.8 ) 2400 tso . plot_heatmap ( 0.8 , sort_genes = True , use_zscore = True , gene_names = False ) If we increase threshold to 50 fewer genes will be selected. tso = tspex . TissueSpecificity ( expression_data , 'counts' , threshold = 50 ) sum ( tso . tissue_specificity >= 0.8 ) 1557 tso . plot_heatmap ( 0.8 , sort_genes = True , use_zscore = True , gene_names = False )","title":"Python API"},{"location":"python_api/#python-api","text":"In this tutorial we will detail the usage of the Python API with real-world data, showing how to integrate tspex with popular packages such as pandas and seaborn .","title":"Python API"},{"location":"python_api/#introduction","text":"In this tutorial we are going to use data from the Genotype-Tissue Expression (GTEx) project , which provides a large catalogue of gene expression across 54 human tissues. In order to speed up the calculations and make the figures clearer, we are going to use only five tissues: Bladder, Liver, Lung, Pancreas and Stomach. import tspex import pandas as pd import seaborn as sns gtex_link = 'https://storage.googleapis.com/gtex_analysis_v7/rna_seq_data/GTEx_Analysis_2016-01-15_v7_RNASeQCv1.1.8_gene_median_tpm.gct.gz' expression_data = pd . read_csv ( gtex_link , sep = ' \\t ' , index_col = 'gene_id' , skiprows = 2 ) expression_data = expression_data . loc [:, [ 'Bladder' , 'Liver' , 'Lung' , 'Pancreas' , 'Stomach' ]] We'll remove genes that are not expressed in any of the five tissues. expression_data = expression_data . loc [( expression_data > 0 ) . any ( axis = 1 )] expression_data . shape ( 31872 , 5 ) expression_data . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000223972.4 0.05878 0.06259 0.06655 0.027255 0.063895 ENSG00000227232.4 14.24000 5.40600 13.68000 5.553000 9.342500 ENSG00000243485.2 0.06097 0.08316 0.06216 0.034055 0.078575 ENSG00000237613.2 0.04113 0.03354 0.03790 0.022915 0.043800 ENSG00000268020.2 0.00000 0.02959 0.00000 0.000000 0.000000","title":"Introduction"},{"location":"python_api/#the-tissuespecificity-class","text":"The usage of the tspex module is centered on the creation and analysis of TissueSpecificity objects. In order to create these objects, two parameters are required: (1) a pandas DataFrame containing gene expression data and (2) a tissue-specificity metric. print ( tspex . TissueSpecificity . __doc__ ) Create an object of the TissueSpecificity class . Parameters ---------- expression_data : pandas . core . frame . DataFrame Pandas DataFrame containing the expression matrix , with rows corresponding to genes and columns to tissues / conditions . method : str A string representing which tissue - expression metric should be calculated . One of : ' counts ' , ' tau ' , ' gini ' , ' simpson ' , ' shannon_specificity ' , ' roku_specificity ' , ' tsi ' , ' zscore ' , ' spm ' , ' spm_dpm ' , ' js_specificity ' , ' js_specificity_dpm ' . log : bool , default False Log - transform the expression matrix before computing tissue - specificity by taking the base - 2 logarithm of one plus the expression values . By default , no transformation is performed . transform : bool , default True Transform the tissue - specificity values so that they range from 0 ( perfectly ubiquitous ) to 1 ( perfectly tissue - specific ) . By default , the value is transformed . The following metrics are affected by changes in this parameter : ' gini ' , ' simpson ' , ' shannon_specificity ' , ' roku_specificity ' , ' zscore ' . threshold : int or float , default 0 Value above which the gene is considered to be expressed . By default , any positive expression value is considered . Only the ' counts ' metric is affected by changes in this parameter . Attributes ---------- expression_data : pandas . DataFrame Expression matrix used to compute the tissue - specificity values . If the log parameter was set to True , the values will be log - transformed . tissue_specificity : pandas . Series or pandas . DataFrame Tissue - specificity values computed from the input expression matrix . The nonobligatory parameters ( log , transform and threshold ) and the object attributes ( expression_data and tissue_specificity ) will be explained throughout the tutorial.","title":"The TissueSpecificity class"},{"location":"python_api/#tissue-specificity-metrics","text":"tspex provides twelve different tissue-specificity metrics that can be divided into two groups: - General scoring metrics: Describe in a single value how tissue-specific or ubiquitous is a gene across all tissues ( counts , tau , gini , simpson , shannon_specificity , roku_specificity , spm_dpm and js_specificity_dpm ). - Individualized scoring metrics: Quantify how specific is the expression of each gene to each tissue ( tsi , zscore , spm and js_specificity ).","title":"Tissue-specificity metrics"},{"location":"python_api/#example-1-general-scoring-metric","text":"In this example we are going to quantify the tissue-specificity of each gene using the Tau metric, which is a general scoring metric. Therefore, we will get a single tissue-specificity score per gene. When creating a TissueSpecificity object, you can choose to log-transform the expression values before quantifying tissue-specificity. tso = tspex . TissueSpecificity ( expression_data , 'tau' , log = True ) The log-transformed expression matrix is stored in the expression_data attribute, which is a regular pandas DataFrame. tso . expression_data . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000223972.4 0.057117 0.060709 0.064429 0.026890 0.061937 ENSG00000227232.4 2.723924 1.857235 2.686486 1.879923 2.336262 ENSG00000243485.2 0.059184 0.079883 0.060305 0.033488 0.075641 ENSG00000237613.2 0.040307 0.032990 0.037199 0.022656 0.042868 ENSG00000268020.2 0.000000 0.029161 0.000000 0.000000 0.000000 The computed tissue-specificity values are stored in the tissue_specificity attribute that, in this case, is an one-dimensional pandas Series. tso . tissue_specificity . head () gene_id ENSG00000223972 . 4 0 . 1981 ENSG00000227232 . 4 0 . 1960 ENSG00000243485 . 2 0 . 2845 ENSG00000237613 . 2 0 . 2235 ENSG00000268020 . 2 1 . 0000 dtype : float64 Any of the Series' methods can be used to inspect tissue_specificity . tso . tissue_specificity . quantile ([ 0.5 , 0.75 , 0.95 ]) 0 . 50 0 . 502950 0 . 75 0 . 761925 0 . 95 1 . 000000 dtype : float64 Two visualization methods are available in tspex: plot_histogram and plot_heatmap . plot_histogram can be used to verify the distribution of the tissue-specificity values. tso . plot_histogram () Whereas plot_heatmap may be used to visualize the amount of genes that are specific for each tissue. tso . plot_heatmap ( threshold = 0.8 , sort_genes = True , use_zscore = True , gene_names = False )","title":"Example 1: General scoring metric"},{"location":"python_api/#example-2-individualized-scoring-metric","text":"In some cases we may be interested in discovering genes that are specifically expressed in one or more tissues of interest. In this situation, general scoring metrics are not be the best choice, as they would only tell us how tissue-specific is each gene, regardless of the tissue. Accordingly, in this example we are going to quantify the tissue-specificity of each gene using the SPM metric, an individualized scoring metric. tso = tspex . TissueSpecificity ( expression_data , 'spm' , log = True ) As the SPM metric computes how specific each gene is in each tissue, the tissue_specificity attribute is a two-dimensional pandas DataFrame. tso . tissue_specificity . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000223972.4 0.4565 0.4852 0.5149 0.2149 0.4950 ENSG00000227232.4 0.5235 0.3569 0.5163 0.3613 0.4490 ENSG00000243485.2 0.4147 0.5598 0.4226 0.2347 0.5301 ENSG00000237613.2 0.5020 0.4108 0.4633 0.2822 0.5339 ENSG00000268020.2 0.0000 1.0000 0.0000 0.0000 0.0000 To inspect the distribution of the tissue-specificity values separately for each tissue, we can use the violinplot function from the seaborn package. sns . violinplot ( x = \"variable\" , y = \"value\" , inner = None , scale = \"count\" , color = 'C0' , data = tso . tissue_specificity . melt ()); The query method can be used to select genes that satisfy certain criteria. In this case, we are selecting genes that are preferentially expressed in the bladder and lung. selected_genes_specificity = tso . tissue_specificity . query ( 'Bladder >= 0.6 & Lung >= 0.6' ) selected_genes_specificity . shape ( 1282 , 5 ) selected_genes_expression = tso . expression_data . reindex ( selected_genes_specificity . index ) selected_genes_specificity . head () .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Bladder Liver Lung Pancreas Stomach gene_id ENSG00000228526.2 0.6410 0.1192 0.6566 0.2270 0.3038 ENSG00000233623.2 0.6775 0.1907 0.6832 0.1948 0.0000 ENSG00000171819.4 0.7653 0.0433 0.6072 0.0858 0.1908 ENSG00000202461.1 0.6564 0.0000 0.6383 0.2459 0.3181 ENSG00000162493.12 0.6019 0.0214 0.6080 0.2072 0.4740 sns . clustermap ( selected_genes_expression , figsize = ( 6 , 6 ), z_score = 0 );","title":"Example 2: Individualized scoring metric"},{"location":"python_api/#example-3-the-transform-parameter","text":"When a TissueSpecificity object is created, the computed tissue-specificity values are transformed so that they fall within 0 (perfectly ubiquitous expression) and 1 (perfectly tissue-specific expression). If the user wants to obtain the untransformed values given by the chosen tissue-specificity metric, he can set the transform argument to False . The following metrics are affected by changes in this parameter: gini , simpson , shannon_specificity , roku_specificity and zscore . For instance, untransformed values obtained with the roku_specificity method fall within 0 and log2(number of tissues). tso = tspex . TissueSpecificity ( expression_data , 'roku_specificity' , log = True ) tso . tissue_specificity . max () 1 . 0 tso . plot_histogram () tso = tspex . TissueSpecificity ( expression_data , 'roku_specificity' , log = True , transform = False ) tso . tissue_specificity . max () 2 . 3219 tso . plot_histogram ()","title":"Example 3: The transform parameter"},{"location":"python_api/#example-4-the-threshold-parameter-of-the-counts-metric","text":"The counts metric quantifies tissue-specificity as the proportion of tissues above a given expression threshold. Consequently, the threshold parameter directly influences the results obtained when using this method. In this example we will first set threshold to 5. Therefore, genes will be considered expressed in any given tissue if their expression is above this value. tso = tspex . TissueSpecificity ( expression_data , 'counts' , threshold = 5 ) sum ( tso . tissue_specificity >= 0.8 ) 2400 tso . plot_heatmap ( 0.8 , sort_genes = True , use_zscore = True , gene_names = False ) If we increase threshold to 50 fewer genes will be selected. tso = tspex . TissueSpecificity ( expression_data , 'counts' , threshold = 50 ) sum ( tso . tissue_specificity >= 0.8 ) 1557 tso . plot_heatmap ( 0.8 , sort_genes = True , use_zscore = True , gene_names = False )","title":"Example 4: The threshold parameter of the counts metric"}]}